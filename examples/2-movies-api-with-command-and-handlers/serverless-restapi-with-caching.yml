service: moviesapi
plugins:
  - serverless-api-gateway-caching

custom:
  apiGatewayCaching:
    enabled: true
    clusterSize: "0.5" # defaults to '0.5'
    ttlInSeconds: 300 # defaults to the maximum allowed: 3600
    dataEncrypted: true # defaults to false

provider:
  name: aws
  runtime: dotnet6
  region: eu-central-1

  apiName: movies-api # Use a custom name for the API Gateway API - needed to easily identify the resource
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:PutItem
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
          Resource: "arn:aws:dynamodb:eu-central-1:403117364727:table/Movies"

package:
  # individually: true
  artifact: bin/release/net6.0/hello.zip


functions:
  GetAllMovies:
    handler: MoviesApi::MoviesApi.HandlersExample.GetAllMoviesHandler::ExecuteAsync
    events:
      - httpApi:
          path: /movies
          method: GET

  GetMovieById:
    handler: MoviesApi::MoviesApi.HandlersExample.GetMovieByIdHandler::ExecuteAsync
    events:
      - httpApi:
          path: /movies/{id}
          method: GET
          caching:
            enabled: true
            cacheKeyParameters:
              - name: request.path.id
              - name: request.header.Accept-Language # you can also use values from header
          authorizer:
            name: Authorizer
            resultTtlInSeconds: 60
            identitySource: method.request.header.Authorization
            type: token

  PutMovie:
    handler: MoviesApi::MoviesApi.HandlersExample.PutMovieHandler::ExecuteAsync
    package:
      artifact: bin/release/net6.0/hello.zip
    events:
      - http:
          path: movies
          method: POST
          authorizer:
            name: Authorizer
            resultTtlInSeconds: 60
            identitySource: method.request.header.Authorization
            identityValidationExpression: "Bearer.*" # regex to validate Authorization header quickly
            type: token

  Authorizer:
    handler: MoviesApi::MoviesApi.HandlersExample.AuthorizeHandler::Execute
    package:
      artifact: bin/release/net6.0/hello.zip

resources:
  Resources:
    MoviesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Movies
        AttributeDefinitions:
          - AttributeName: Id
            AttributeType: S
        KeySchema:
          - AttributeName: Id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
